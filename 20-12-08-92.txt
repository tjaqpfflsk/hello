1.String 클래스에서 concat 메서드를 설명하시오.
  문자열을 연결시키는 함수이다.
  String의 리터럴 값은 불변하므로 연결할 때 새로운 객체를 생성하여 연결시킨다.
 기본형 ) 
 스트링 함수명.concat(붙일 스트링 함수명);



2.str.substring(2, 4);	substring 사용법에 대하여 설명하시오.
  문자열의 일부를 추출하는 함수로써 
  - 스트링 함수명.substring(정수);
  : 넣어 준 정수 이후의 값을 추출한다.(순서 시작은 0부터 시작한다.)
  - 스트링 함수명.substring(정수, 정수)
  : 첫 번째 써 준 정수는 시작 위치(순서 시작은 0부터 시작한다.)에서 부터 두 번째 정수(순서시작은 1부터 시작한다.)까지를 추출한다.

String str = "abcdefg";
str.substring(2, 4);
이 경우 012 순인 c 부터 1234 순인 d 까지를 추출하는 것이다. 



3.st1.compareTo(st2);	compareTo 사용법에 대하여 설명하시오.
  인트값을 반환하게 된다.
  - 기본형 : 스트링 함수명.compareTo(비교할 스트링 함수명);
  - 사용법 : int 값을 반환하게 되므로 int 타입의 변수를 하나 선언해주고 
  인트값에 기본형을 대입한 다음 
  조건문을 주어서 나온 정수 값이 0이랑 같다면 두 문자열이 일치하다는 뜻이고 
  0보다 작다면 기준이 되는 앞의 스트링 함수의 문자열이 사전으로 앞에 위치 한다는 것을 뜻한다.
  0보다 크다면 기준이 되는 앞의 스트링 함수의 문자열이 사전으로 뒤에 위치 한다는 것을 뜻한다.


		String st1 = "Lexicographically";
		String st2 = "lexicographically";
		int cmp;
		
		cmp = st1.compareTo(st2);
		if(cmp == 0)
			System.out.println("두 문자열은 일치합니다.");
		else if (cmp < 0)
			System.out.println("사전의 앞에 위치하는 문자 : "+st1);
		else
			System.out.println("사전의 앞에 위치하는 문자 : "+st1);
코딩 결과 : 
사전의 앞에 위치하는 문자 : Lexicographically



4.String.valueOf 에 대하여 설명하시오.
  기본 자료형의 값을 문자열로 바꾸는 함수이다.
  기본 : String.valueOf( );
  예)
  int a = 123456789;
  String st = String.valueOf( a );
 1234567 이 "1234567" 이렇게 되는 것이다.



5. 아래의 연산과정에서 호출되는 함수(원리)를 써서 표현해 보세요.
String str = "age: " + 17;
  서로의 타입이 달라서 문자열과 정수의 연산이므로 정수를 문자열로 바꿔준 다음 붙이는 것이다.
String str = "age: " + 17; 이 것을
String str = "age: ".concat(String.valueOf(17));



6.StringBuilder 와 String 의 차이는?
  스트링을 사용할 때에는 스트링은 리터럴 값이 불변이므로 매번 객체를 생성해서 붙여주어야 하지만
  스트링빌더는 맨 처음 객체를 생성하고 그 다음 객체는 생성하지 않고 그대로 붙일 수 있다.
  간단하게 사용할 경우 그냥 스트링을 사용해도 되지만 반복문을 돌리거나 많은 객체를 생성하는 경우에는
  스트링 빌더를 사용하여 메모리 사용량을 줄여주는 것이 좋다.



7.String 을 이용하여 프로그래밍 하시오. (이거가 가장 쉬워요)
입력 : 990925-1012999 
출력 : 990925 1012999 

import java.util.Scanner;

public class StringPrint {

	private String a;

	public StringPrint() {

	}

	public StringPrint(String a) {
		this.a = a;
	
	}

	public String getA() {
		return a;
	}

	public void setA(String a) {
		this.a = a;
	}

	public void input() {
		Scanner sc = new Scanner(System.in);
		System.out.println("주민을 입력하세요");
		a = sc.nextLine();
		sc.close();
	}
	
	public void replace() {
		
		if(a == null) { 
			System.out.println("단어 입력이 안되었습니다.");
			return;
		}
		
		StringBuilder b = new StringBuilder(a);
		b.replace(6, 7, " ");
		System.out.println(b);
	}
	
	public void replaceprint() {
		input();
		replace();
	}
}//class end




8.아래의 메모리 그림을 그리시오.
int[] ar1 = new int[5];




9.아래를 프로그래밍 하시오.(단 클래스로 구성할것) 7,9는 풀어야 해요!
입력:lee sunkyo
출력:first name: lee second name:sunkyo

package java_study;

import java.util.Scanner;

public class Name {

	private String name;

	public void Name() {

	}

	public void Name(String name) {
		this.name = name;
	}

	public void input() {
		Scanner sc = new Scanner(System.in);
		System.out.println("이름을 입력하세요!");
		name = sc.nextLine();
		sc.close();
	}
	
	public void firstName() {
		System.out.println("first name : " + name.substring(0, 3));
	}
	public void secondName() {
		System.out.println("second name : " + name.substring(4));
	}
	
	public void print() {
		input();
		firstName();
		secondName();
	}
	
	
}//class end



10.아래를 프로그래밍 하시오.

입력 : 홍 길동 
출력 : 성 = 홍  이름 = 길동 

입력 : 홍길동 
출력 : 공백이 없군요. 다시 입력해주세요.

import java.util.Scanner;

public class KoreaName {
	private String name;

	public void KoreaName() {

	}

	public void KoreaName(String name) {
		this.name = name;
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public void Name() {
		while (true) {
			Scanner sc = new Scanner(System.in);
			System.out.println("이름을 입력하세요!");
			name = sc.nextLine();

			if (name.substring(1, 2).equals(" ")) {
				System.out.println("성 = " + name.substring(0, 1));
				System.out.println("이름 = " + name.substring(2));
				break;
			} else {
				System.out.println("공백이 없군요. 다시 입력해주세요.");
				continue;
			}
		}
	}

	public static void main(String[] args) {

		KoreaName a = new KoreaName();
		a.Name();

	}//main end
}//class end



11.아래를 프로그래밍 하시오.
"Hello.java" 문자열에서 파일명과 확장자인 java를 분리시키는 프로그램을 짜시오.

입력: Hello.java
출력: 파일이름은:Hello 이며 확장자는 java 입니다.

입력: Java.avi 
출력: 파일이름은:Java 이며 확장자는 avi 입니다.

package java_study;

import java.util.Scanner;

public class Saperate {
	private String filename;

	public void Saperate() {

	}

	public void Saperate(String filename) {
		this.filename = filename;
	}

	public String getName() {
		return filename;
	}

	public void setName(String filename) {
		this.filename = filename;
	}

	public void input() {
		Scanner sc = new Scanner(System.in);
		System.out.println("이름을 입력하세요!");
		filename = sc.nextLine();
		sc.close();
	}

	public void Name() {// ab.java
		for (int i = 1; i <= filename.length(); i++) {
			if (filename.substring(i - 1, i).equals(".")) {
				System.out.println("파일이름은: " + filename.substring(0, i - 1) + " 이며 확장자는 " + filename.substring(i) + "입니다.");
			}
		}
	}

	public static void main(String[] args) {

		Saperate a = new Saperate();
		a.input();
		a.Name();

	}

}



문제12. Scanner 클래스를 이용해서 한 줄 읽고, 공백으로 분리된 "단어"가 몇 개 들어 있는지 확인해보자.

   "그만"을 입력할 때까지 반복하는 프로그램이다.힌트(split 함수를 이용해 볼것)

예) 입력 : Java Programming 
출력 : 단어의 개수는 2
입력 : 자바 수업은 2층 C클래스 
출력 : 단어의 개수는 4
입력 : 그만 > 출력 : 프로그램 종료

package java_study;

import java.util.Scanner;

public class WordsCount {
	private String words;

	public WordsCount() {

	}

	public WordsCount(String words) {
		this.words = words;
	}

	public void setWords(String words) {
		this.words = words;
	}

	public String getWords() {
		return words;
	}

	public void result() {

		Scanner sc = new Scanner(System.in);
		while (true) {
			System.out.println("문장을 입력하세요!");
			words = sc.nextLine();
			String[] arr = words.split(" ");
			
			if(words.equals("그만")) {
				System.out.println("프로그램 종료");
				break;
			}else {
				System.out.println("단어의 개수는 " + arr.length);
				continue;
			}
		}
		sc.close();
	}


	public static void main(String[] args) {
		WordsCount a = new WordsCount();
		a.result();
	}

}

